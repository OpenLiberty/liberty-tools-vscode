{
    "liberty.ls": "Liberty LS",
    "liberty.ls.thumbs.up": "Liberty LS $(thumbsup)",
    "liberty.ls.thumbs.down": "Liberty LS $(thumbsdown)",
    "liberty.ls.starting": "Language Server for Liberty is starting...",
    "liberty.ls.started": "Language Server for Liberty started",
    "liberty.ls.failstart": "Language Server for Liberty failed to start",
    "jakarta.ls": "LSP4Jakarta",
    "jakarta.ls.thumbs.up": "LSP4Jakarta $(thumbsup)",
    "jakarta.ls.started": "Language Server for Jakarta started",
    "no.liberty.projects.found": "No liberty projects found.",
    "starting.liberty.dev.on": "Starting liberty dev on {0}",
    "cannot.start.liberty.dev": "Cannot start liberty dev on an undefined project",
    "stopping.liverty.dev.on": "Stopping liberty dev on {0}",
    "liberty.dev.not.started.on": "liberty dev has not been started on {0}",
    "cannot.stop.liberty.dev.on.undefined": "Cannot stop liberty dev on an undefined project",
    "params.must.start.with.dash": "Parameters must start with -",
    "starting.liberty.dev.with.custom.param": "Starting liberty dev with custom parameters on {0}",
    "specify.custom.parms": "Specify custom parameters for the liberty dev command.",
    "cannot.custom.start.liberty.dev": "Cannot custom start liberty dev on an undefined project",
    "cannot.start.liberty.dev.in.container.on.undefined.project": "Cannot start liberty dev in a container on an undefined project",
    "running.liberty.dev.tests.on": "Running liberty dev tests on {0}",
    "liberty.dev.has.not.been.started.on": "liberty dev has not been started on {0}",
    "cannot.run.test.on.undefined.project": "Cannot run tests on an undefined project",
    "test.report.does.not.exist.run.test.first": "Test report ({0}) does not exist.  Run tests to generate a test report.",
    "cannot.open.test.reports.on.undefined.project": "Cannot open test reports on an undefined project",
    "unable.to.delete.terminal": "Unable to delete terminal: {0}",
    "unable.to.parse.settings.gradle": "Unable to parse settings.gradle: {0}.  The error is: {1}",
    "unable.to.parse.build.gradle": "Unable to parse build.gradle: {0}.  The error is {1}",
    "error.parsing.pom": "Unable to parse pom file, the error is {0}",
    "refreshing.liberty.dashboard": "Refreshing Liberty Dashboard projects...",
    "no.liberty.project.found.in.empty.workspace": "No Liberty project found in empty workspace",
    "add.project.manually.no.projects.available.to.add": "No workspace folders available to be added to Liberty Dashboard",
    "add.project.manually.message.0": "The selected project at {0} has been successfully added to Liberty Dashboard",
    "add.project.manually.message.1": "The selected project at {0} already exists in Liberty Dashboard",
    "add.project.manually.message.2": "The selected project at {0} is not a Maven or Gradle project",
    "confirmation.button.label.yes": "Yes",
    "confirmation.button.label.no": "No",
    "remove.custom.project.confirmation": "Are you sure you want to remove the project in {0} from the Liberty Dashboard?",
    "remove.custom.project.successful": "The project has been successfully removed from Liberty Dashboard",
    "remove.custom.project.empty.list": "User added project list is empty.  Nothing to remove",
    "remove.custom.project.not.in.list": "Select project does not exist in Liberty Dashboard, or it was not manually added to Liberty Dashboard.  Nothing to remove."
}